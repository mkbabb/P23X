Test date: 03/10/21  14:52:48 
The number of times you used the grading program is 4 
In the business world, your customer replaces the grading program. 
The goal is a correct program with the fewest grading attempts. 
TABS Grading System Version 4.0
Student: Last=Babb                 First=Mike                 Type=Individual          
Grading and testing history log
       User Test.    Date: 03/10/21  02:44:16  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:44:23  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:45:37  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:45:39  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:45:41  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:45:42  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:45:44  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:45:46  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:45:48  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:45:49  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:45:51  CANTO_5.TXT  testout      
   *** Grading Run.  Date: 03/10/21  02:47:15 
       User Test.    Date: 03/10/21  02:57:04  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:57:06  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:57:11  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:57:12  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:57:14  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  02:57:15  CANTO_5.TXT  testout      
   *** Grading Run.  Date: 03/10/21  03:07:48 
       User Test.    Date: 03/10/21  03:09:03  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  03:09:05  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  03:09:06  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  03:09:07  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  03:09:08  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  03:09:09  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  03:09:11  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  03:09:12  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  03:09:13  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  03:09:16  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  03:09:18  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  03:09:19  CANTO_5.TXT  testout      
   *** Grading Run.  Date: 03/10/21  03:09:23 
       User Test.    Date: 03/10/21  14:52:28  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  14:52:31  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  14:52:32  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  14:52:34  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  14:52:35  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  14:52:36  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  14:52:37  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  14:52:39  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  14:52:41  CANTO_5.TXT  testout      
       User Test.    Date: 03/10/21  14:52:43  CANTO_5.TXT  testout      
   *** Grading Run.  Date: 03/10/21  14:52:48 
   Running test 01   ...  tabs   gradin.1
   Running test 01A  ...  tabs 6 gradin.1
   Running test 01B  ...  tabs 1 gradin.1
   Running test 02   ...  tabs   gradin.2
   Running test 02A  ...  tabs 5 gradin.2
   Running test 02B  ...  tabs 2 gradin.2
   Running test 03   ...  tabs   gradin.3
   Running test 03A  ...  tabs 7 gradin.3
   Running test 03B  ...  tabs 3 gradin.3
   *** Passed all functional tests
++ Grade ++   60 = Points earned for correct answers.

-> We are now analyzing your source code. You will be graded on
the number of instructions you wrote to solve this problem.
The target for the number of executable instructions written is:
 00 -  30 = 20 points 
 31 -  32 = 15 points 
 33 -  34 = 10 points 
 35 -  36 =  5 points 
 37+      =  0 points 
Your actual counts are:
Lines .......  42    Comments ...   8    Labels .......   5   
Directives ..   5    Variables ..   0    Executables ..  24    McCabe ..   6 
++ Grade ++   20 = Points earned for code written efficiency.  

-> Analyzing program documentation. 
The heuristic algorithms used may have problems with your specific code. 
Contact the instructor if you detect a problem with your grade. 
DOCPH-0000 The program header is not adequate, -10 points.        
           Every program needs an descriptive program header.     
           See the Program Documentation Requirements on the WEB. 
DOCHB-0.00 Use of code blocks headers is not adequate, -10 points.     
           Programs must be broken into small functional blocks of code.     
           Each block must have a header that describes the code's function. 
           See the Program Documentation Requirements on the WEB.            
DOCLC-0.21 Use of line comments is not adequate, -10 points.                       
           Virtually all lines of executable code need a meaningful comment. 
           See the Program Documentation Requirements on the WEB.                   
++ Grade ++    0 = Points earned for correct documentation.    

-> Calculating the total grade for the program.                  
This grade is subject to adjustment by the instructor.           
This grade will be reduced by any late submission penalty.       
++ Grade ++   80 = Total grade generated by the Grading System.  

-> Statistics on testing and grading                             
    39  = Number of user tests.                                  
     4  = Number of grading runs to get the program working.     
     0  = Number of grading runs to improve efficiency or documentation. 

+- atyC<6&}xC86&k~C6&juiC6&zuzC>6&Zkyz&jgzk@&69576587&&7:@;8@:>&

Building the file tabs.ans for electronic submission...

        .model     small
        .8086          
        .stack     256 
.code
   
print_space:
    mov dl, ' '
print_space_loop:
    int 21h                     ; int'rupt.
    loopz print_space_loop
main_body:
    mov cl, byte ptr es:[82h]
    sub cl, '0'
    jnc main_loop
    
    mov cl, 10
main_loop:
    mov ah, 08h                 ; read from stdin into al, no echo.
    int 21h                     ; int'rupt.
    mov dl, al

    mov ah, 02h                 ; print to stdout from dl.

    cmp al, 09h
    je print_space

    int 21h                     ; int'rupt.

    cmp al, 0dh
    je main_body
    cmp al, 0ah
    je main_body
    cmp al, 1ah
    je done

    loopnz main_loop
    jmp main_body
done:
    mov ah, 4ch                 
    int 21h  

    end main_body  
