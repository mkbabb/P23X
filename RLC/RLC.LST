Microsoft (R) Macro Assembler Version 6.11		    04/12/21 16:16:29
rlc.asm							     Page 1 - 1


				;---------------------------------------------------------------------
				;  Program:      Run Length Coding
				;
				;  Function:     Decompresses 1 dimensional run lengths
				;                This subroutine links with a C main program
				;
				;                Add your additional functional comments
				;
				;  Owner:
				;
				;  Changes:
				;  Date          Reason
				;  ----          ------
				;  05/16/2017    Original version ... coded to spec design
				;---------------------------------------------------------------------
				         .model    small
				         .8086
				         public    _rlc
				;---------------------------------------
 0000				         .data                         ;start the data segment
				;---------------------------------------
 0000  0002 [			    run         db 2 dup (?)         
        00
       ]
 0002 50			    pels_left   db 80

 0003 DB			    black db 219
 0004 20			    cur db 32

				;---------------------------------------
 0000				         .code                         ;start the code segnment
				;---------------------------------------
				; Save the registers ... 'C' requires (bp,si,di)
				; Access the input and output lists
				;---------------------------------------
 0000				_rlc:                                  ;
 0000  55			    push      bp                  ;save 'C' register
 0001  8B EC			    mov       bp,sp               ;set bp to point to stack
 0003  56			    push      si                  ;save 'C' register
 0004  57			    push      di                  ;save 'C' register
 0005  8B 76 04			    mov       si, [bp + 4]           ;si points to the input compressed data
 0008  8B 7E 06			    mov       di, [bp + 6]           ;di points to the empty output buffer
				    
 000B  8C D8			    mov ax, ds
 000D  8E C0			    mov es, ax
 000F  B4 20			    mov ah, 32
				;---------------------------------------
 0011				main_body:
 0011  AC			    lodsb

 0012  3C 00			    cmp al, 0
 0014  74 4F			    je exit

 0016  A2 0000 R		    mov [run], al
 0019  A2 0001 R		    mov [run + 1], al

 001C  B1 04			    mov cl, 4
 001E  D2 2E 0000 R		    shr [run], cl
				    
 0022  80 26 0001 R 0F		    and [run + 1], 0fh

 0027  33 DB			    xor bx, bx ; i
 0029  33 C9			    xor cx, cx ; len

 002B  E8 0006			    call for_looper
 002E  43			    inc bx
 002F  E8 0002			    call for_looper

 0032  EB DD			    jmp main_body
 0034				for_looper:
 0034  80 3E 0002 R 00		    cmp [pels_left], 0
 0039  75 0C			    jne run_test

 003B  C6 06 0002 R 50		    mov [pels_left], 80
 0040  B4 20			    mov ah, 32
 0042  C6 06 0003 R DB		    mov [black], 219
 0047				run_test:
 0047  80 BF 0000 R 0F		    cmp [run + bx], 15
 004C  74 06			    je run_test_if

 004E  8A 8F 0000 R		    mov cl, [run + bx]
 0052  EB 04			    jmp while_loop_test
 0054				run_test_if:
 0054  8A 0E 0002 R		    mov cl, [pels_left]

 0058				while_loop_test:
 0058  8A C4			    mov al, ah
 005A  28 0E 0002 R		    sub [pels_left], cl

 005E				while_loop: 
 005E  F3/ AA			    rep stosb

 0060				cur_test:
 0060  86 26 0003 R		    xchg ah, [black]
 0064  C3			    ret

				;---------------------------------------
				; Restore registers and return
				;---------------------------------------
 0065				exit:                                  ;
 0065  5F			    pop       di                  ;restore 'C' register
 0066  5E			    pop       si                  ;restore 'C' register
 0067  5D			    pop       bp                  ;restore 'C' register
 0068  C3			    ret                           ;return
				;---------------------------------------
				    end

 
Microsoft (R) Macro Assembler Version 6.11		    04/12/21 16:16:29
rlc.asm							     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 0005	  Word	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	16 Bit	 0069	  Word	  Public  'CODE'	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
_rlc . . . . . . . . . . . . . .	L Near	 0000	  _TEXT	Public
black  . . . . . . . . . . . . .	Byte	 0003	  _DATA	
cur_test . . . . . . . . . . . .	L Near	 0060	  _TEXT	
cur  . . . . . . . . . . . . . .	Byte	 0004	  _DATA	
exit . . . . . . . . . . . . . .	L Near	 0065	  _TEXT	
for_looper . . . . . . . . . . .	L Near	 0034	  _TEXT	
main_body  . . . . . . . . . . .	L Near	 0011	  _TEXT	
pels_left  . . . . . . . . . . .	Byte	 0002	  _DATA	
run_test_if  . . . . . . . . . .	L Near	 0054	  _TEXT	
run_test . . . . . . . . . . . .	L Near	 0047	  _TEXT	
run  . . . . . . . . . . . . . .	Byte	 0000	  _DATA	
while_loop_test  . . . . . . . .	L Near	 0058	  _TEXT	
while_loop . . . . . . . . . . .	L Near	 005E	  _TEXT	

	   0 Warnings
	   0 Errors
