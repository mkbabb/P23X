Test date: 04/12/21  16:11:30 
The number of times you used the grading program is 28 
In the business world, your customer replaces the grading program. 
The goal is a correct program with the fewest grading attempts. 
RLC Grading System Version 4.0
Student: St#1=Babb                 St#2t=Cheerla              Type=Team                
Grading and testing history log
       User Test.    Date: 04/12/21  01:44:44  1            Display      
       User Test.    Date: 04/12/21  01:44:58  2            Display      
       User Test.    Date: 04/12/21  01:45:20  3            Display      
       User Test.    Date: 04/12/21  01:55:06  1            Display      
       User Test.    Date: 04/12/21  01:55:31  1            Display      
       User Test.    Date: 04/12/21  01:58:17  1            Display      
       User Test.    Date: 04/12/21  02:01:10  1            Display      
       User Test.    Date: 04/12/21  12:44:01  1            Display      
       User Test.    Date: 04/12/21  12:44:21  1            Display      
       User Test.    Date: 04/12/21  12:46:02  1            Display      
       User Test.    Date: 04/12/21  12:46:24  1            Display      
       User Test.    Date: 04/12/21  12:46:35  1            Display      
       User Test.    Date: 04/12/21  12:47:43  1            Display      
       User Test.    Date: 04/12/21  12:48:14  1            Display      
       User Test.    Date: 04/12/21  12:49:39  1            Display      
       User Test.    Date: 04/12/21  12:57:49  1            Display      
       User Test.    Date: 04/12/21  13:03:27  1            Display      
       User Test.    Date: 04/12/21  13:20:07  1            Display      
       User Test.    Date: 04/12/21  13:20:20  1            Display      
       User Test.    Date: 04/12/21  13:26:43  1            Display      
       User Test.    Date: 04/12/21  13:27:10  2            Display      
       User Test.    Date: 04/12/21  13:30:21  1            Display      
       User Test.    Date: 04/12/21  13:36:39  1            Display      
       User Test.    Date: 04/12/21  13:37:09  1            Display      
       User Test.    Date: 04/12/21  13:44:55  1            Display      
       User Test.    Date: 04/12/21  13:47:50  1            Display      
       User Test.    Date: 04/12/21  13:50:13  1            Display      
       User Test.    Date: 04/12/21  13:50:29  2            Display      
       User Test.    Date: 04/12/21  13:50:31  3            Display      
   *** Grading Run.  Date: 04/12/21  13:51:42 
       User Test.    Date: 04/12/21  14:03:46  1            Display      
   *** Grading Run.  Date: 04/12/21  14:03:52 
       User Test.    Date: 04/12/21  14:04:52  1            Display      
   *** Grading Run.  Date: 04/12/21  14:04:55 
       User Test.    Date: 04/12/21  14:10:53  1            Display      
       User Test.    Date: 04/12/21  14:11:19  1            Display      
       User Test.    Date: 04/12/21  14:11:44  1            Display      
       User Test.    Date: 04/12/21  14:12:40  1            Display      
   *** Grading Run.  Date: 04/12/21  14:12:48 
       User Test.    Date: 04/12/21  14:19:47  1            Display      
   *** Grading Run.  Date: 04/12/21  14:19:49 
       User Test.    Date: 04/12/21  14:22:12  1            Display      
       User Test.    Date: 04/12/21  14:22:34  1            Display      
       User Test.    Date: 04/12/21  14:23:22  1            Display      
       User Test.    Date: 04/12/21  14:25:08  1            Display      
       User Test.    Date: 04/12/21  14:30:06  1            Display      
   *** Grading Run.  Date: 04/12/21  14:30:10 
       User Test.    Date: 04/12/21  14:32:06  1            Display      
   *** Grading Run.  Date: 04/12/21  14:32:07 
       User Test.    Date: 04/12/21  14:33:39  1            Display      
   *** Grading Run.  Date: 04/12/21  14:33:41 
       User Test.    Date: 04/12/21  14:34:29  1            Display      
   *** Grading Run.  Date: 04/12/21  14:34:31 
       User Test.    Date: 04/12/21  14:47:25  1            Display      
       User Test.    Date: 04/12/21  14:47:49  1            Display      
       User Test.    Date: 04/12/21  14:49:04  1            Display      
       User Test.    Date: 04/12/21  14:49:33  1            Display      
   *** Grading Run.  Date: 04/12/21  14:49:39 
       User Test.    Date: 04/12/21  14:51:50  1            Display      
   *** Grading Run.  Date: 04/12/21  14:51:55 
       User Test.    Date: 04/12/21  14:53:04  1            Display      
   *** Grading Run.  Date: 04/12/21  14:53:06 
       User Test.    Date: 04/12/21  14:53:57  1            Display      
       User Test.    Date: 04/12/21  14:54:27  1            Display      
   *** Grading Run.  Date: 04/12/21  14:54:31 
       User Test.    Date: 04/12/21  14:55:13  1            Display      
   *** Grading Run.  Date: 04/12/21  14:55:16 
       User Test.    Date: 04/12/21  14:57:07  1            Display      
       User Test.    Date: 04/12/21  14:59:36  1            Display      
       User Test.    Date: 04/12/21  14:59:52  1            Display      
   *** Grading Run.  Date: 04/12/21  14:59:55 
       User Test.    Date: 04/12/21  15:04:16  1            Display      
       User Test.    Date: 04/12/21  15:06:02  1            Display      
       User Test.    Date: 04/12/21  15:06:51  1            Display      
       User Test.    Date: 04/12/21  15:10:45  1            Display      
   *** Grading Run.  Date: 04/12/21  15:10:47 
       User Test.    Date: 04/12/21  15:12:22  1            Display      
   *** Grading Run.  Date: 04/12/21  15:12:24 
       User Test.    Date: 04/12/21  15:15:07  1            Display      
   *** Grading Run.  Date: 04/12/21  15:15:12 
       User Test.    Date: 04/12/21  15:29:56  1            Display      
   *** Grading Run.  Date: 04/12/21  15:29:59 
       User Test.    Date: 04/12/21  15:31:37  1            Display      
   *** Grading Run.  Date: 04/12/21  15:31:40 
       User Test.    Date: 04/12/21  15:32:16  1            Display      
   *** Grading Run.  Date: 04/12/21  15:32:18 
       User Test.    Date: 04/12/21  15:32:55  1            Display      
   *** Grading Run.  Date: 04/12/21  15:32:56 
       User Test.    Date: 04/12/21  15:36:49  1            Display      
   *** Grading Run.  Date: 04/12/21  15:36:52 
       User Test.    Date: 04/12/21  15:39:05  1            Display      
       User Test.    Date: 04/12/21  15:43:55  1            Display      
       User Test.    Date: 04/12/21  15:44:41  1            Display      
   *** Grading Run.  Date: 04/12/21  15:44:44 
       User Test.    Date: 04/12/21  15:46:52  1            Display      
       User Test.    Date: 04/12/21  15:48:16  1            Display      
       User Test.    Date: 04/12/21  15:48:47  1            Display      
   *** Grading Run.  Date: 04/12/21  15:48:50 
       User Test.    Date: 04/12/21  15:51:08  1            Display      
       User Test.    Date: 04/12/21  15:53:00  1            Display      
       User Test.    Date: 04/12/21  15:55:04  1            Display      
       User Test.    Date: 04/12/21  15:56:46  1            Display      
       User Test.    Date: 04/12/21  15:57:35  1            Display      
   *** Grading Run.  Date: 04/12/21  15:57:47 
       User Test.    Date: 04/12/21  15:59:55  1            Display      
       User Test.    Date: 04/12/21  16:01:18  1            Display      
       User Test.    Date: 04/12/21  16:03:50  1            Display      
   *** Grading Run.  Date: 04/12/21  16:03:53 
       User Test.    Date: 04/12/21  16:11:27  1            Display      
   *** Grading Run.  Date: 04/12/21  16:11:30 

Testing 1 dimension compression
Your output is correct
Your output is correct
Your output is correct

+  Your executed instruction count for tests run = 00008225
+   
+  Target instructions executed for tests run is:
+  20 points 00000 - 07999 
+  15 points 08000 - 09999 
+  10 points 10000 - 11999 
+   5 points 12000 - 13999 
+   0 points 14001 +       
+                          

++ Grade ++   15 = Points earned for code executed efficiency!

1 dimension compression is working

The following is credit earned for 1-dim compression

++ Grade ++  040 = Points earned for correct answers.

-> We are now analyzing your source code. You will be graded on
the number of instructions you wrote to solve this problem.
The target for the number of executable instructions written is:
 00 -  44 = 20 points 
 45 -  49 = 15 points 
 50 -  54 = 10 points 
 55 -  59 =  5 points 
 60+      =  0 points 
Your actual counts are:
Lines ....... 105    Comments ...  44    Labels .......   9   
Directives ..   6    Variables ..   4    Executables ..  42    McCabe ..   4 
++ Grade ++   20 = Points earned for code written efficiency.  

-> Analyzing program documentation. 
The heuristic algorithms used may have problems with your specific code. 
Contact the instructor if you detect a problem with your grade. 
DOCPH-0015 The program header format is adequate. 
DOCHB-0.17 Use of code blocks headers is not adequate, -10 points.     
           Programs must be broken into small functional blocks of code.     
           Each block must have a header that describes the code's function. 
           See the Program Documentation Requirements on the WEB.            
DOCLC-0.29 Use of line comments is not adequate, -10 points.                       
           Virtually all lines of executable code need a meaningful comment. 
           See the Program Documentation Requirements on the WEB.                   
++ Grade ++    0 = Points earned for correct documentation.    

-> Calculating the total grade for the program.                  
This grade is subject to adjustment by the instructor.           
This grade will be reduced by any late submission penalty.       
++ Grade ++   75 = Total grade generated by the Grading System.  

-> Statistics on testing and grading                             
    82  = Number of user tests.                                  
    28  = Number of grading runs to get the program working.     
     0  = Number of grading runs to improve efficiency or documentation. 

+- atyC:6&}xC86&k~C7;&juiC6&zuzC=;&Zkyz&jgzk@&6:578587&&7<@77@96&

Building the file rlc.ans for electronic submission...

;---------------------------------------------------------------------
;  Program:      Run Length Coding
;
;  Function:     Decompresses 1 dimensional run lengths
;                This subroutine links with a C main program
;
;                Add your additional functional comments
;
;  Owner:
;
;  Changes:
;  Date          Reason
;  ----          ------
;  05/16/2017    Original version ... coded to spec design
;---------------------------------------------------------------------
         .model    small
         .8086
         public    _rlc
;---------------------------------------
         .data                         ;start the data segment
;---------------------------------------
    run         db 2 dup (?)         
    pels_left   db 80

    black db 219
    cur db 32

;---------------------------------------
         .code                         ;start the code segnment
;---------------------------------------
; Save the registers ... 'C' requires (bp,si,di)
; Access the input and output lists
;---------------------------------------
_rlc:                                  ;
    push      bp                  ;save 'C' register
    mov       bp,sp               ;set bp to point to stack
    push      si                  ;save 'C' register
    push      di                  ;save 'C' register
    mov       si, [bp + 4]           ;si points to the input compressed data
    mov       di, [bp + 6]           ;di points to the empty output buffer
    
    mov ax, ds
    mov es, ax
    mov ah, 32
;---------------------------------------
main_body:
    lodsb

    cmp al, 0
    je exit

    mov [run], al
    mov [run + 1], al

    mov cl, 4
    shr [run], cl
    
    and [run + 1], 0fh

    xor bx, bx ; i
    xor cx, cx ; len

    call for_looper
    inc bx
    call for_looper

    jmp main_body
for_looper:
    cmp [pels_left], 0
    jne run_test

    mov [pels_left], 80
    mov ah, 32
    mov [black], 219
run_test:
    cmp [run + bx], 15
    je run_test_if

    mov cl, [run + bx]
    jmp while_loop_test
run_test_if:
    mov cl, [pels_left]

while_loop_test:
    mov al, ah
    sub [pels_left], cl

while_loop: 
    rep stosb

cur_test:
    xchg ah, [black]
    ret

;---------------------------------------
; Restore registers and return
;---------------------------------------
exit:                                  ;
    pop       di                  ;restore 'C' register
    pop       si                  ;restore 'C' register
    pop       bp                  ;restore 'C' register
    ret                           ;return
;---------------------------------------
    end

