Microsoft (R) Macro Assembler Version 6.11		    04/25/21 13:01:20
mov.asm							     Page 1 - 1


				;----------------------------------
				         .model    small          ;4 64KB segments
				         .8086                    ;only 8086 instructions
				         .stack    256            ;256 byte stack
				;----------------------------------
				
				
				;----------------------------------
 0000				         .data                    ;data
				;----------------------------------
 0000 00			x       db        0              ;variable x
 0001 00			dum_x   db        0              ;variable x
 0002 00			y       db        0              ;variable y
 0003 00			z       db        0              ;variable z
 0004 00 01 02 03 04 05		inctbl  db        000, 001, 002, 003, 004, 005, 006, 007, 008, 009 ;
       06 07 08 09
 000E  0A 0B 0C 0D 0E 0F	        db        010, 011, 012, 013, 014, 015, 016, 017, 018, 019 ;
       10 11 12 13
 0018  14 15 16 17 18 19	        db        020, 021, 022, 023, 024, 025, 026, 027, 028, 029 ;
       1A 1B 1C 1D
 0022  1E 1F 20 21 22 23	        db        030, 031, 032, 033, 034, 035, 036, 037, 038, 039 ;
       24 25 26 27
 002C  28 29 2A 2B 2C 2D	        db        040, 041, 042, 043, 044, 045, 046, 047, 048, 049 ;
       2E 2F 30 31
 0036  32 33 34 35 36 37	        db        050, 051, 052, 053, 054, 055, 056, 057, 058, 059 ;
       38 39 3A 3B
 0040  3C 3D 3E 3F 40 41	        db        060, 061, 062, 063, 064, 065, 066, 067, 068, 069 ;
       42 43 44 45
 004A  46 47 48 49 4A 4B	        db        070, 071, 072, 073, 074, 075, 076, 077, 078, 079 ;
       4C 4D 4E 4F
 0054  50 51 52 53 54 55	        db        080, 081, 082, 083, 084, 085, 086, 087, 088, 089 ;
       56 57 58 59
 005E  5A 5B 5C 5D 5E 5F	        db        090, 091, 092, 093, 094, 095, 096, 097, 098, 099 ;
       60 61 62 63
 0068  64 65 66 67 68 69	        db        100, 101, 102, 103, 104, 105, 106, 107, 108, 109 ;
       6A 6B 6C 6D
 0072  6E 6F 70 71 72 73	        db        110, 111, 112, 113, 114, 115, 116, 117, 118, 119 ;
       74 75 76 77
 007C  78 79 7A 7B 7C 7D	        db        120, 121, 122, 123, 124, 125, 126, 127, 128     ;
       7E 7F 80
				;----------------------------------
				
				
				;----------------------------------
 0000				         .fardata                 ;256 bytes of work memory for selection code
				;----------------------------------
 0000  0100 [			        db        256 dup(0)      ;byte vars need 256 bytes of work memory
        00
       ]
				;----------------------------------
				
				
				;----------------------------------
 0000				         .code                    ;Program
				;----------------------------------
				
 0000  B8 ---- R		start:  mov       ax,@data       ;initialize
 0003  8E D8			        mov       ds, ax          ; the ds register
 0005  B8 ---- R		        mov       ax,@fardata    ;initialize
 0008  8E C0			        mov       es, ax          ; the es register
 000A  BB 0000			        mov       bx, 0           ;clear bx as pointer register
				
 000D  B4 08			        mov       ah, 8           ;read code
 000F  CD 21			        int       21h            ;read interrupt
 0011  A2 0000 R		        mov       [x], al         ;save x
 0014  8A D0			        mov       dl, al          ;ready to echo x
 0016  B4 02			        mov       ah, 2           ;write code
 0018  CD 21			        int       21h            ;write interrupt
				
 001A  B4 08			        mov       ah, 8           ;read code
 001C  CD 21			        int       21h            ;read interrupt
 001E  A2 0002 R		        mov       [y], al         ;save y
 0021  8A D0			        mov       dl, al          ;ready to echo y
 0023  B4 02			        mov       ah, 2           ;write code
 0025  CD 21			        int       21h            ;write interrupt
				
 0027  B4 08			        mov       ah, 8           ;read code
 0029  CD 21			        int       21h            ;read interrupt
 002B  A2 0003 R		        mov       [z], al         ;save z
 002E  8A D0			        mov       dl, al          ;ready to echo z
 0030  B4 02			        mov       ah, 2           ;write code
 0032  CD 21			        int       21h            ;write interrupt
				
				;--------------------------------------------------
 0034  8A 1E 0002 R		        mov bl, [y]
 0038  8A 8F FFD4 R		        mov cl, [inctbl + bx - 48]
 003C  8B F9			        mov di, cx
				
 003E  8A 1E 0000 R		        mov bl, [x]
 0042  8A 81 0004 R		        mov al, [inctbl + bx + di]
 0046  A2 0001 R		        mov [dum_x], al
				
				                
				;--------------------------------------------------
 0049  8A 1E 0003 R		        mov       bl, [z]       
 004D  26: C6 07 00		        mov  byte ptr es:[bx], 0   
				                            
 0051  B3 2B			        mov       bl, '+'         
 0053  26: C6 07 01		        mov  byte ptr es:[bx], 1  
				                                
 0057  8A 1E 0003 R		        mov       bl, [z]         
 005B  26: 8A 1F		        mov       bl, es:[bx]    
				 
 005E  8A 97 0000 R		        mov  dl, byte ptr[x + bx]  
				
 0062  B4 02			        mov       ah, 2           ;write code
 0064  CD 21			        int       21h            ;write interrupt
				;--------------------------------------------------
				
 0066  B8 4C00			        mov       ax, 4c00h       ;get the termination code
 0069  CD 21			        int       21h            ;terminate
				
				        end       start          ;end program
Microsoft (R) Macro Assembler Version 6.11		    04/25/21 13:01:20
mov.asm							     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 0085	  Word	  Public  'DATA'	
STACK  . . . . . . . . . . . . .	16 Bit	 0100	  Para	  Stack	  'STACK'	 
FAR_DATA . . . . . . . . . . . .	16 Bit	 0100	  Para	  Private 'FAR_DATA'  
_TEXT  . . . . . . . . . . . . .	16 Bit	 006B	  Word	  Public  'CODE'	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
dum_x  . . . . . . . . . . . . .	Byte	 0001	  _DATA	
inctbl . . . . . . . . . . . . .	Byte	 0004	  _DATA	
start  . . . . . . . . . . . . .	L Near	 0000	  _TEXT	
x  . . . . . . . . . . . . . . .	Byte	 0000	  _DATA	
y  . . . . . . . . . . . . . . .	Byte	 0002	  _DATA	
z  . . . . . . . . . . . . . . .	Byte	 0003	  _DATA	

	   0 Warnings
	   0 Errors
