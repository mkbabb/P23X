CSC23x:  Homework Grades    (code=7-75688-5) Ver 580110
Student:                 Babb,                 Mike 
Created: 03/08/21 Updated:  03/15 15:49:58  

HW#  Started        Status         Grade
HW5  03/08/21       D 03/08 15:49  096               
HW6  03/15/21       D 03/15 15:49  100               
HW7                                000               
HW8                                000               
VER=W867350R1B0T10M0B0D0I9:0:90 I041600V00/05000000659

End of file     
-


**********   HW5.TXT   **********

HW5 - Multiply and Divide 

01. Given these hex values for the 8086 registers 
    AX=290E  BX=5DE8  CX=9704  DX=DA59
    What are the hex values in DX and AX after executing this instruction:

    mul  cl 

02. Was the Carry Flag set to 0 or 1 ? 

03. Given these hex values for the 8086 registers 
    AX=C80A  BX=ABA5  CX=1FB1  DX=06B5
    What are the hex values in DX and AX after executing this instruction:

    mul  ch 

04. Was the Carry Flag set to 0 or 1 ? 

05. Given these hex values for the 8086 registers 
    AX=8FFB  BX=0FC6  CX=5486  DX=CC1A
    What are the hex values in DX and AX after executing this instruction:

    imul  bh 

06. Was the Carry Flag set to 0 or 1 ? 

07. Given these hex values for the 8086 registers 
    AX=C109  BX=C1EF  CX=71F8  DX=9EAB
    What are the hex values in DX and AX after executing this instruction:

    imul  bl 

08. Was the Carry Flag set to 0 or 1 ? 

09. Given these hex values for the 8086 registers 
    AX=0183  BX=9160  CX=0009  DX=79A7
    What are the hex values in DX and AX after executing this instruction:

    mul  cx 

10. Was the Carry Flag set to 0 or 1 ? 

11. Given these hex values for the 8086 registers 
    AX=710E  BX=7AD6  CX=1000  DX=12C0
    What are the hex values in DX and AX after executing this instruction:

    mul  cx 

12. Was the Carry Flag set to 0 or 1 ? 

13. Given these hex values for the 8086 registers 
    AX=01D4  BX=FFF8  CX=F5B6  DX=7331
    What are the hex values in DX and AX after executing this instruction:

    imul  bx 

14. Was the Carry Flag set to 0 or 1 ? 

15. Given these hex values for the 8086 registers 
    AX=887B  BX=0100  CX=43C0  DX=4B52
    What are the hex values in DX and AX after executing this instruction:

    imul  bx 

16. Was the Carry Flag set to 0 or 1 ? 

17. Given these hex values for the 8086 registers 
    AX=0001  BX=D09C  CX=1E02  DX=2B24
    What are the hex values in DX and AX after executing this instruction:

    div  cl 

18. Given these hex values for the 8086 registers 
    AX=0027  BX=22D9  CX=000A  DX=0000
    What are the hex values in DX and AX after executing this instruction:

    div  cx 

19. Given these hex values for the 8086 registers 
    AX=001E  BX=FFF8  CX=8BC2  DX=6787
    What are the hex values in DX and AX after executing this instruction:

    idiv  bl 

20. Given these hex values for the 8086 registers 
    AX=FFFB  BX=0013  CX=B406  DX=B81C
    What are the hex values in DX and AX after executing this instruction:

    idiv  bl 

21. Given these hex values for the 8086 registers 
    AX=FFF2  BX=FFFF  CX=5197  DX=3013
    What are the hex values in DX and AX after executing this instruction:

    idiv  bl 

22. Given these hex values for the 8086 registers 
    AX=FFEA  BX=0004  CX=26EC  DX=FFFF
    What are the hex values in DX and AX after executing this instruction:

    idiv  bx 

23. Given these hex values for the 8086 registers 
    AX=1989  BX=0519  CX=7C1F  DX=9F77
    Will this instruction cause a divide overflow? 

    div  ch 

24. Given these hex values for the 8086 registers 
    AX=1540  BX=5B20  CX=C3F8  DX=2B8F
    Will this instruction cause a divide overflow? 

    div  cx 

25. Given these hex values for the 8086 registers 
    AX=DFBB  BX=BE05  CX=D6ED  DX=F62C
    Will this instruction cause a divide overflow? 

    idiv  ch 

End of file
-


**********   HW5.ANS   **********

 1:da59
 1:0038
 2:0
 3:06b5
 3:0136
 4:1
 5:cc1a
 5:ffb5
 6:0
 7:9eab
 7:ff67
 8:1
 9:0000
 9:0d9b
10:0
11:0710
11:e000
12:1
13:ffff
13:f160
14:0
15:ff88
15:7b00
16:1
17:2b24
17:0100
18:0009
18:0003
19:6787
19:06fd
20:b81c
20:fb00
21:3013
21:000e
22:fffe
22:fffb
23:n
24:y
25:y
End of file
-


**********   HW6.TXT   **********

HW6 - Indirect Addressing 

These are the hex values for the 8086 pointer registers. 

    SI=0011  DI=0009  BX=001C  BP=00FA

These are the hex values for the Data Segment shown 16 bytes per line. 

    0000: 5B 39 53 D9 FA EB CA 05 FE 89 36 35 52 1E 00 7D 
    0010: CB FF BA 73 B8 0B 58 91 BB 32 9D DA D7 34 D3 C0 
    0020: C9 AB BF 46 9C 4C D4 62 78 6A A7 A5 BB BB A3 1D 
    0030: 4A 5F FE 7B 2A 1E EB 71 4A F2 12 5E A3 C5 3D 2D 

The first 5 questions access BYTE size data. 

01. What is the hex value in al after executing: mov al,[bx] 

02. What is the hex value in al after executing: mov al,[si] 

03. What is the hex value in al after executing: mov al,[di] 

04. What is the hex value in al after executing: mov al,[di+1] 

05. What is the hex value in al after executing: mov al,[di-1] 

The next 10 questions access WORD size data.

06. What is the hex value in ax after executing: mov ax,[bx] 

07. What is the hex value in ax after executing: mov ax,[si] 

08. What is the hex value in ax after executing: mov ax,[di] 

09. What is the hex value in ax after executing: mov ax,[si+7] 

10. What is the hex value in ax after executing: mov ax,[di+12] 

11. What is the hex value in ax after executing: mov ax,[bx-13] 

12. What is the hex value in ax after executing: mov ax,[bx+si] 

13. What is the hex value in ax after executing: mov ax,[bx+di] 

14. What is the hex value in ax after executing: mov ax,[bx+si+4] 

15. What is the hex value in ax after executing: mov ax,[bx+di-9] 

16. Does this instruction need a data size override:  add [bx],9  

17. From which segment (code, data, extra, stack) is the   
    source data obtained for this instruction:  sub dx,[di]  

18. From which segment (code, data, extra, stack) is the     
    source data obtained for this instruction:  mov dx,[bp+4]  

19. From which segment (code, data, extra, stack) is the     
    source data obtained for this instruction:  sub dx,[ds:bp] 

20. Is this instruction valid:  sub [dx],2  

End of file
-


**********   HW6.ANS   **********

 1:d7
 2:ff
 3:89
 4:36
 5:fe
 6:34d7
 7:baff
 8:3689
 9:32bb
10:580b
11:cb7d
12:a3bb
13:d44c
14:fe5f
15:34d7
16:y
17:data
18:stack
19:data
20:n
End of file
-


**********   HW7.TXT   **********

HW7 - Subroutines 

01.  Given this subroutine.                                              
                                                                    
      subr:   push  ax                                              
              push  si                                              
              mov   ax,[si]                                         
              mov   [si],ah                                         
              mov   [si+1],al                                       
              pop   si                                              
              pop   ax                                              
              ret                                                   
                                                                    
A. The subroutine saves and restores ax and si,                     
   both of which are modified by the subroutine.                    
B. The subroutine saves and restores the si register,               
   even though the si register is not modified.                     


02.  This subroutine is to copy one list to another list. Input is:         
    si points to the source list and di points to the destination list 
    cx contains the count of bytes in the source list  
    
    subr:   cmp     cx,0        ; is list size zero    
            je      exit        ; if yes we are done   
            push    si          ; save si              
            push    di          ; save di              
            push    cx          ; save cx              
    movr:   mov     al,[si]     ; get a byte           
            mov     [di],al     ; put a byte           
            loop    movr        ; repeat if more chars 
    exit:   pop     cx          ; restore cx           
            pop     di          ; restore di           
            pop     si          ; restore si           
            ret                 ; return to caller     
                                                       
If cx is not zero then when will the subroutine correctly 
copy the source list to the destination list              
A. for all non zero values of cx 
B. only if cx=0001               
C. if cx is in the range 0001 to 00FF  (1 to 255) 
D. if cx is in the range 0001 to 7FFF  (cx appears to be positive) 
E. if cx is in the range 8000 to FFFF  (cx appears to be negative) 


03.  You have been asked to review the following subroutine.  The       
calling program expects that all modified registers will be saved  
and restored.  Which registers are modified and should be saved    
and restored?                                                      
                                                                   
       sub:   mov  ax,[si]                                         
              add  [di],ax                                         
              mul  ax                                              
              mov  [bx],dx                                         
              ret                                                  
                                                                   
A. The only register  modified is:  ax                             
B. The only registers modified are: ax and si                      
C. The only registers modified are: ax and dx                      
D. The only registers modified are: ax and si and bx               
E. The only registers modified are: ax and di and bx               
F. The only registers modified are: ax and si and di and bx        


04.  Given this subroutine whose input is a pointer in si.              
                                                                   
    subr:    mov  bx,2                                             
             mov  cx,1                                             
             mov  ax,[si]                                          
             mul  bx                                               
             jc   subret                                           
             div  cx                                               
    subret:  ret                                                   
                                                                   
Which hex value, if loaded into ax by the instruction mov ax,[si]  
would result in the subroutine generating a divide overflow.       
A. 0000                                                            
B. 7FFF                                                            
C. 8000                                                            
D. All  of the above will result in a divide overflow.             
E. None of the above will result in a divide overflow.             


05.  The input to this routine is a pointer in si that points to a word of   
data in memory.  The routine is to swap the high byte and low byte of   
the data word in memory.  For example if si points the memory data word 
11 22, then the routine should set the memory data word to 22 11.   
                                                                    
      subr:   push  ax                                              
              push  si                                              
              mov   ax,[si]                                         
              mov   [si],ah                                         
              mov   [si+1],al                                       
              pop   si                                              
              pop   ax                                              
              ret                                                   
                                                                    
Which is true about the subroutine's operation.                     
A. The high and low bytes will be swapped for all values of the     
   memory data word.                                                
B. The high and low bytes will be swapped only if both bytes of     
   the memory data word are in the range of hex 00-7F.              
C. The high and low bytes will be swapped only if both bytes of     
   the memory data word are in the range of hex 80-FF.              
D. The high and low bytes will be swapped only if both bytes of     
   the memory data word have the same value.                        


CODE=KIADF       
End of file
-


**********  NO HW7.ANS  **********




**********   HW8.TXT   **********

HW8 - Machine Code 

01. Convert:  mov bx,[varx]  into hex machine code. 
    Varx is a word variable located at hex offset 1000 in the data segment.

02. Convert:  add bl,100  into hex machine code. 

03. Convert:  sub cx,dx  into hex machine code. 

04. Convert:  cmp cx,1000  into hex machine code. 

05. Convert:  mov [vary],-1  into hex machine code. 
    Vary is a byte variable located at hex offset 2000 in the data segment.

06. Given this hex machine code: F6FD  What is the       
    symbolic opcode for that instruction (mul, imul, div, idiv).   

07. Given the same hex machine code: F6FD  What is the   
    size of the data used by that instruction (byte, word).  

08. Given the same hex machine code: F6FD  What is the   
    register specified the r/m field.  

09. Given this hex machine code: 78A1  What is the symbolic opcode 
    for this instruction.  

10. This hex machine code represents 1 or more symbolic instructions. 
    50507878 
    How many symbolic instructions does it represent? 

End of file
-


**********  NO HW8.ANS  **********

