Microsoft (R) Macro Assembler Version 6.11		    02/11/21 22:43:21
hellom.asm						     Page 1 - 1


				;--------------------------------------------------------------------
				;   Program:  Hello (MASM version)
				;
				;   Function: Writes "Hello World" to the standard output device.
				;             It is equivalent to the famous C++ program, hello world.
				;
				;             It uses 3 constant declarations to generate the message,
				;             to show that dos writes data until it finds a '$'.
				;
				;             A single constant will also work, such as
				;             msg  db  'Hello World',13,10,'$'
				;
				;             In assembler you have as much flexibility as you want.
				;
				;   Owner:    DAL
				;
				;   Date:     Changes
				;   01/26/01  original version
				;
				;---------------------------------------
				         .model     small              ;64k code and 64k data
				         .8086                         ;only allow 8086 instructions
				         .stack     256                ;reserve 256 bytes for the stack
				;---------------------------------------


				;---------------------------------------
 0000				         .data                         ;start the data segment
				;---------------------------------------
 0000 48 65 6C 6C 6F 20		msg      db        'Hello World'       ;the hello world message
       57 6F 72 6C 64
 000B 0D 0A			eol      db        13,10               ;cr/lf = \n in c++
 000D 24			term     db        '$'                 ;dos end of string
				                                       ;
 000E 000E			msglen   dw        term-msg+1          ;total length of the message
				;---------------------------------------


				;---------------------------------------
 0000				         .code                         ;start the code segment
				;---------------------------------------
 0000				hello:                                 ;
 0000  B8 ---- R		         mov       ax,@data            ;establish addressability to the
 0003  8E D8			         mov       ds,ax               ;data segment for this program
				;---------------------------------------
				; write out the message
				;---------------------------------------
 0005  BA 0000 R		         mov       dx,offset msg       ;point to the message
 0008  B4 09			         mov       ah,9                ;set the dos code to write a string
 000A  CD 21			         int       21h                 ;write the string
				;---------------------------------------
				; terminate program execution
				;---------------------------------------
 000C				exit:                                  ;
 000C  B8 4C00			         mov       ax,4c00h            ;set dos code to terminate program
 000F  CD 21			         int       21h                 ;return to dos
				         end       hello               ;end marks the end of the source code
				                                       ;....and specifies where you want the
				                                       ;....program to start execution
				;---------------------------------------
 
Microsoft (R) Macro Assembler Version 6.11		    02/11/21 22:43:21
hellom.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 0010	  Word	  Public  'DATA'	
STACK  . . . . . . . . . . . . .	16 Bit	 0100	  Para	  Stack	  'STACK'	 
_TEXT  . . . . . . . . . . . . .	16 Bit	 0011	  Word	  Public  'CODE'	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
eol  . . . . . . . . . . . . . .	Byte	 000B	  _DATA	
exit . . . . . . . . . . . . . .	L Near	 000C	  _TEXT	
hello  . . . . . . . . . . . . .	L Near	 0000	  _TEXT	
msglen . . . . . . . . . . . . .	Word	 000E	  _DATA	
msg  . . . . . . . . . . . . . .	Byte	 0000	  _DATA	
term . . . . . . . . . . . . . .	Byte	 000D	  _DATA	

	   0 Warnings
	   0 Errors
